name: Build and Release Ironuki GUI

on:
  push:
    tags:
      - "v*" # Trigger on version tags like v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js 20.11.0
        uses: actions/setup-node@v3
        with:
          node-version: "20.11.0"

      # Install Python 3.9 on macOS and ensure node-gyp uses it
      - name: Install Python 3.9 and set path on macOS
        if: runner.os == 'macOS'
        run: |
          brew install python@3.9
          python3 --version
          # Set the correct Python path to make node-gyp use Python 3.9
          export PATH="/opt/homebrew/opt/python@3.9/bin:$PATH"
          # Verify that the correct Python version is being used
          python3 --version
          # Install Xcode command line tools (needed for native module compilation)
          xcode-select --install || echo "Xcode Command Line Tools already installed"
          # Verify installation
          clang --version
          make --version

      # Install Python 3.9 and dependencies on Ubuntu
      - name: Install dependencies on Ubuntu
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3.9 make gcc libxtst-dev libx11-dev
          python3 --version

      # Install Python 3.9 on Windows
      - name: Install Python 3.9 on Windows
        if: runner.os == 'Windows'
        run: |
          choco install python --version=3.9.10
          python --version

      # Install Node.js dependencies
      - name: Install Node.js dependencies
        run: npm install

      # Run the Ironuki GUI
      - name: Run npx ironuki
        run: npx ironuki

      # Upload Windows Executable
      - name: Upload Windows Executable
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ironuki-windows
          path: dist/*.exe

      # Upload macOS Binary
      - name: Upload macOS Binary
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: ironuki-macos
          path: dist/*.dmg

      # Upload Ubuntu .deb File
      - name: Upload Ubuntu .deb File
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: ironuki-ubuntu
          path: dist/*.deb
